# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    paths-ignore:
      - '**.md'
      - '**.png'
      - '**.jpg'
      - '**.webp'
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest for coverage
      run: |
        cd tests
        PYTHONPATH=../wp-exp-to-md-img-fixer coverage run --source="../wp-exp-to-md-img-fixer" -m pytest

    - name: Test coverage
      run: |
        cd tests
        PYTHONPATH=../wp-exp-to-md-img-fixer coverage report -m --fail-under=95

    - name: Real world use of public image server (until I bother to spin one up here)
      run: |
        python wp-exp-to-md-img-fixer/converted_md_corrector.py -m tests/si-tests/pages https://i.ibb.co

    - name: Run End to End, inside a Nodejs container
      run: |
        git clone https://github.com/lonekorean/wordpress-export-to-markdown.git
        cd wordpress-export-to-markdown
        cp ../tests/provision.sh .
        # Todo, this requires export.xml from somebodies wordpress site.
        docker run --name nodev --rm -v "$PWD":/usr/src/myapp -w /usr/src/myapp node:18.7.0-alpine3.15 sh -c provision.sh

